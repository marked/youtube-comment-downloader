10d9
< import argparse
12a12
> import re
28a29,30
>     for match in re.findall("UC[0-9A-Za-z-_]{10,30}\"", html):
>         print(match[:-1])
33a36
>     
41d43
< 
58c60
< def download_comments(youtube_id, sleep=1):
---
> def download_comments(youtube_id, sleep=0):
132,137d133
<     parser = argparse.ArgumentParser(add_help=False, description=('Download Youtube comments without using the Youtube API'))
<     parser.add_argument('--help', '-h', action='help', default=argparse.SUPPRESS, help='Show this help message and exit')
<     parser.add_argument('--youtubeid', '-y', help='ID of Youtube video for which to download the comments')
<     parser.add_argument('--output', '-o', help='Output filename (output format is line delimited JSON)')
<     parser.add_argument('--limit', '-l', type=int, help='Limit the number of comments')
< 
139,143c135
<         args = parser.parse_args(argv)
< 
<         youtube_id = args.youtubeid
<         output = args.output
<         limit = args.limit
---
>         youtube_id = sys.argv[1]
145c137
<         if not youtube_id or not output:
---
>         if not youtube_id:
147c139
<             raise ValueError('you need to specify a Youtube ID and an output filename')
---
>             raise ValueError('you need to specify a Youtube ID')
149c141
<         print('Downloading Youtube comments for video:', youtube_id)
---
>         sys.stderr.write('Downloading Youtube comments for video: ' + youtube_id)
151c143
<         with io.open(output, 'w', encoding='utf8') as fp:
---
>         if True:
154d145
<                 print(comment_json.decode('utf-8') if isinstance(comment_json, bytes) else comment_json, file=fp)
156,160c147,149
<                 sys.stdout.write('Downloaded %d comment(s)\r' % count)
<                 sys.stdout.flush()
<                 if limit and count >= limit:
<                     break
<         print('\nDone!')
---
>                 sys.stderr.write('Downloaded %d comment(s)\r' % count)
>                 sys.stderr.flush()
>         sys.stderr.write('\nDone!')
164c153
<         print('Error:', str(e))
---
>         sys.stderr.write('Error:' + str(e))

